# Auto detect text files and perform LF normalization
* text=auto
package com.demo.pdf;

import java.io.File;
import java.io.IOException;
import java.util.Properties;
import java.util.Scanner;

import org.apache.pdfbox.pdmodel.PDDocument;
import org.apache.pdfbox.pdmodel.PDPage;
import org.apache.pdfbox.pdmodel.PDPageContentStream;
import org.apache.pdfbox.pdmodel.font.PDType0Font;
import org.apache.pdfbox.pdmodel.font.PDFont;

import javax.mail.*;
import javax.mail.internet.*;
import java.util.*;
import javax.activation.*;

public class CreatePDF {
	public static void main(String args[]) throws IOException {
		MailAttach ma=new MailAttach();
		PDDocument pdfdoc = new PDDocument();
		PDPage pg = new PDPage();
		pdfdoc.addPage(pg);

		PDPageContentStream c = new PDPageContentStream(pdfdoc, pg);
		c.beginText();

		PDType0Font font = PDType0Font.load(pdfdoc, new File("C:\\Windows\\Fonts\\Arial.ttf"));
		c.setFont(font, 24);
		c.newLineAtOffset(25, 725);

		// Name
		Scanner s = new Scanner(System.in);
		System.out.println("Enter the name : ");
		String name = s.nextLine();
		c.showText("Name : " + name);
		c.endText();

		// Age
		System.out.println("Enter the age : ");
		int age = s.nextInt();
		c.beginText();
		c.newLineAtOffset(25, 675);
		c.showText("Age : " + Integer.toString(age));
		c.endText();

		// Address
		System.out.println("Enter the address : ");
		String address = s.next();
		c.beginText();
		c.newLineAtOffset(25, 625);
		c.showText("Address : " + address);
		c.endText();

		// From Email
		System.out.println("Enter the email : ");
		String email = s.next();
		c.beginText();
		c.newLineAtOffset(25, 575);
		c.showText("Email : " + email);
		c.endText();

		// Mobile
		System.out.println("Enter the mobile number : ");
		long mob = s.nextInt();
		c.beginText();
		c.newLineAtOffset(25, 525);
		c.showText("Mobile no : " + Long.toString(mob));

		c.endText();
		c.close();

		pdfdoc.save("C:\\velu\\demo.pdf");
		pdfdoc.close();

		System.out.println("demo pdf created");
		send(email, "password", email, "Test Email", email);
		ma.attachment();
	}

	public static void send(String from, String password, String to, String sub, String msg) {
		Properties props = new Properties();
		props.put("mail.smtp.host", "smtp.gmail.com");
		props.put("mail.smtp.socketFactory.port", "465");
		props.put("mail.smtp.socketFactory.class", "javax.net.ssl.SSLSocketFactory");
		props.put("mail.smtp.auth", "true");
		props.put("mail.smtp.port", "465");
		
		Session session = Session.getDefaultInstance(props, new javax.mail.Authenticator() {
			protected PasswordAuthentication getPasswordAuthentication() {
				return new PasswordAuthentication(from, password);
			}
		});
		
		try {
			MimeMessage message = new MimeMessage(session);
			message.addRecipient(Message.RecipientType.TO, new InternetAddress(to));
			message.setSubject(sub);
			message.setText(msg);
			Transport.send(message);
			System.out.println("message sent successfully");
		} catch (MessagingException e) {
			throw new RuntimeException(e);
		}

	}
}
